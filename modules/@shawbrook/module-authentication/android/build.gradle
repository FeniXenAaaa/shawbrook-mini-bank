apply plugin: 'com.android.library'

group = 'expo.modules.shawbrookmoduleauthentication'
version = '1.0.0'

def expoModulesCorePlugin = new File(project(":expo-modules-core").projectDir.absolutePath, "ExpoModulesCorePlugin.gradle")
apply from: expoModulesCorePlugin
applyKotlinExpoModulesCorePlugin()
useCoreDependencies()
useExpoPublishing()

// If you want to use the managed Android SDK versions from expo-modules-core, set this to true.
// The Android SDK versions will be bumped from time to time in SDK releases and may introduce breaking changes in your module code.
// Most of the time, you may like to manage the Android SDK versions yourself.
def useManagedAndroidSdkVersions = false
if (useManagedAndroidSdkVersions) {
  useDefaultAndroidSdkVersions()
} else {
  buildscript {
    // Simple helper that allows the root project to override versions declared by this library.
    ext.safeExtGet = { prop, fallback ->
      rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
    }
  }
  project.android {
    compileSdkVersion safeExtGet("compileSdkVersion", 36)
    defaultConfig {
      minSdkVersion safeExtGet("minSdkVersion", 24)
      targetSdkVersion safeExtGet("targetSdkVersion", 36)
    }
  }
}

android {
  namespace "expo.modules.shawbrookmoduleauthentication"
  defaultConfig {
    versionCode 1
    versionName "1.0.0"
  }
  lintOptions {
    abortOnError false
  }
  dependencies {
    implementation("io.insert-koin:koin-android:4.0.4")
    implementation project(":kotlin-secure-core")
    implementation("androidx.biometric:biometric:1.1.0")           // for BiometricManager/Prompt
    implementation("androidx.security:security-crypto:1.1.0-alpha06") // for EncryptedSharedPreferences
    implementation("androidx.core:core-ktx:1.13.1")               // for ContextCompat
    implementation("androidx.fragment:fragment-ktx:1.6.1")        // for FragmentActivity
  }
}
